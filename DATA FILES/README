README for DATA FILES

> Data generation
>> data.generation.R

Generates 200 datasets following specifications outlined in the Simulation Data Generation section. In order to create the 3 "different" sets of datasets in 0.INSTRU.data.R, 3.INSTRU.data.R, all.INSTRU.data.R, we may toggle the number of instruments are included in the covariate matrix output, though the core data generating mechanism is always the same.

>> 0.INSTRU.data.R, 3.INSTRU.data.R, all.INSTRU.data.R

Each contain 200 datasets generated with data.generation.R in a list form. Each dataset is a list consisting of outcome (vector), treatment (vector), truePS (vector) and covariates (matrix where the number of columns is set equal to 3 + number of instruments, 0, 5 or 12)

> Run code
>> designfunction.R

Included function performs the PS estimation in a MLE or Bayesian manner. Requires treatment (vector), covariates (matrix or data.frame where column number = number of covariates). User may specify how many draws from the posterior distribution of PS they wish to output (K). 

Outputs estimated PS in a n by K matrix format, where n is the sample size of the inputted data and K is 1 if PS estimation is performed in a MLE manner.

>> analysisfunction.R 

Included function (analysisfxn) performs one of 5 (user-specified) implementations + analyses 

Outputs estimated ATEs, estimated SEs, and implementation/analysis details such as number of matches, proportion of treated in each strata etc. Some outputs are implementation specific. 

>> BPSAfxn.R

Included function performs BPSA (calls designfunction.R and analysisfunction.R) for all 5 implementations, assembles outputs for all implementations.

Outputs BPSA.output, a list:

- BPSA.sim.results: data frame, columns include 
-- ATE (estimate of delta)
-- avg.est.SE (avg conditional SE of delta)
-- method (implementation method)
-- rubinse (marginal SE of delta)
-- interval.lower (lower bound for a 95% credible interval)
-- inteval.upper (upper bound for a 95% credible interval)
-- percused (percentage of data used, only relevant for matching implementations)
-- marginal.SD.nu (marginal SD of nu, averaged over within-observation standard deviation of nu across K draws of the PS)
-- marginal SD.nu.treated (marginal SD of nu for treated observations)
-- marginal.SD.nu.control (marginal SD of nu for control observations)
-- ncontrol (number of control observations in matched set, only relevant for matching algorithms)
-- ntreat (number of treated observations in matched set, only relevant for matching algorithms)
-- cov.balance (measure covariate balance, calculated via standardized difference in covariates between treated and control, averaged over covariates)

- nn.matchingNU: n by K matrix of frequency weights calculated for M = 200
- caliper.matchingNU: n by K matrix of frequency weights calculated for M = 200
- caliper.matching.5NU: n by K matrix of frequency weights calculated for M = 200
- ipwNU: n by K matrix of inverse-probability weights calculated for M = 200
- stratNU: n by K matrix of strata calculated for M = 200
- PS.sd: n by M matrix of within-observation empirical standard deviations in PS across draws from its posterior distribution
- strata.PROP.list: length-M list of 5 by K matrices, contains proportion of treated observations within each of the 5 stratas

>> DDU.BPSAfxn.R

Performs BPSA (calls designfunction.R and analysisfunction.R) for NN.matching and caliper.matching, varying the ratio. Used for Appendix 2 simulation.

Outputs BPSA.output, a list:
- BPSA.sim.results: data frame, columns include
-- ATE (estimate of delta) 
-- avg.est.SE (avg conditional SE of delta) 
-- method (implementation method) 
-- ratio (ratio of control-to-treated specified for the matching algorithm)
-- rubinse (marginal SE of delta)
-- interval.lower (lower bound for a 95% credible interval)
-- inteval.upper (upper bound for a 95% credible interval)
-- percused (percentage of data used, only relevant for matching implementations)
-- marginal.SD.nu (marginal SD of nu, averaged over within-observation standard deviation of nu across K draws of the PS)
-- marginal SD.nu.treated (marginal SD of nu for treated observations)
-- marginal.SD.nu.control (marginal SD of nu for control observations)
-- ncontrol (number of control observations in matched set)
-- ntreat (number of treated observations in matched set)
-- cov.balance (measure covariate balance, calculated via standardized difference in covariates between treated and control, averaged over covariates)

- caliper.matching.1NU: K x n x R matrix of frequency weights for caliper matching with ratio = 1, calculated on dataset m = 200. Used to calculate SD of frequency weights for each observation across R performances of caliper matching conditional on a single PS
- caliper.matching.2NU: K x n x R matrix of frequency weights for caliper matching with ratio = 2, calculated on dataset m = 200. Used to calculate SD of frequency weights for each observation across R performances of caliper matching conditional on a single PS
- caliper.matching.5NU: K x n x R matrix of frequency weights for caliper matching with ratio = 5, calculated on dataset m = 200. Used to calculate SD of frequency weights for each observation across R performances of caliper matching conditional on a single PS
- PS.sd: n by M matrix of within-observation empirical standard deviations in PS across draws from its posterior distribution

>> PSAfxn.R
Performs PSA (calls designfunction.R and analysisfunction.R) for all 5 implementations, assembles outputs for all implementations. Used for primary simulation.

Outputs PSA.output, a list:

- PSA.sim.results: data frame containing the following columns
-- ATE (estimated treatment effect)
-- se (SE estimated via asymptotic methods)
-- method (implementation method)
-- percused (percentage of data used, only relevant for matching implementations)
-- ncontrol (number of control observations in matched set, only relevant for matching algorithms)
-- ntreat (number of treated observations in matched set, only relevant for matching algorithms)
-- cov.balance (measure covariate balance, calculated via standardized difference in covariates between treated and control, averaged over covariates)

- nn.matchingNU: n by M matrix of frequency weights calculated for all datasets
- caliper.matchingNU: n by M matrix of frequency weights calculated for all datasets
- caliper.matching.5NU: n by M matrix of frequency weights calculated for all datasets
- ipwNU: n by M matrix of inverse-probability weights calculated for all datasets
- stratNU: n by M matrix of strata calculated for all datasets
- strata.PROP.list: length-M list of vectors length 5, contains proportion of treated observations within each of the 5 stratas

> Code for application

>> app.data.R

List object containing "treatment" (vector length 22,723), "covariates" 22,723 by 17 matrix of covariates, "outcome" (vector length 22,723)

>> data.manip.R

Reads in original source_oriented_data_noMEDICARE.csv, performs a complete case analysis, restricts regions to Northeast, Southeast and Industrial Midwest, dichotomizes the exposure, removes some covariates and re-organizes relevant data into a list app.data (written as app.data.R).

>>run.app.R

Calls on PSAfxn.R and BPSAfxn.R, performs both PSA and BPSA on app.data.R

> Data for application

>> source_oriented_data_noMEDICARE.csv

Data from Cummisky et. al. stripped of Medicare data. 